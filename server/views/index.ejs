<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link href="/styles/style.css" rel="stylesheet" />
</head>

<body class="overflow-hidden">
  <div class="bg-gray-800 font-bold text-2xl text-white stroke-white stroke-2 left-60 " id="showRoom">Room: </div>
  <input type="text" id="roomName" name="roomName" />
  <br />
  <input type="button" value="Absenden" onclick="displayRoomName()">
  <main class="w-screen h-screen bg-gray-800 flex justify-center items-center">
    <ul id="messages"></ul>
    <input
      class="w-32 h-32 rounded-lg shadow-lg bg-gray-300 hover:scale-105 cursor-pointer absolute bottom-10 left-10 text-4xl font-semibold z-10 hidden"
      id="brake" type="button" name="brake" value="Brake" />
    <input
      class="w-32 h-32 rounded-lg shadow-lg bg-gray-300 hover:scale-105 cursor-pointer absolute bottom-10 right-10 text-4xl font-semibold z-10 hidden"
      id="gas" type="button" name="gas" value="Gas" />
    <div class="w-[225px] h-[225px] border-4 border-yellow-400 absolute shadow-xl rounded-lg z-10"></div>

    <div class="bg-blue-700 absolute shadow-gray-950 shadow-2xl flex justify-center items-center rounded"
      id="drivingBox"></div>
    <span id="sum" class="font-bold text-4xl text-white stroke-white stroke-2 absolute"></span>

    <div class="w-[525px] h-[525px] border-4 border-yellow-400 absolute shadow-xl rounded-lg z-10"></div>
  </main>
</body>

</html>
<script src="/socket.io/socket.io.js"></script>

<!-- <script src="http://box-task.imis.uni-luebeck.de/socket.io/socket.io.js"></script> -->
<script>
  var roomName = "";

  var socket = io();

  var messages = document.getElementById("messages");

  var gas = document.getElementById("gas");
  var brake = document.getElementById("brake");
  var sum = document.getElementById("sum");
  var showRoom = document.getElementById("showRoom");
  var drivingBox = document.getElementById("drivingBox");
  var intervalId = null;
  var speed = 0;
  var accelerationFactor = 50;
  var pressed = false;



  function displayRoomName() {
    // Den Wert des Eingabefelds abrufen
    var roomName = document.getElementById("roomName").value;

    // Den Wert in der Konsole ausgeben
    console.log("Room Name: " + roomName);
    showRoom.textContent += " " + roomName;
    socket.emit("join room", roomName);
    pressed = true;

  }

  function increaseSpeed() {
    if (speed <= 250) {
      speed += accelerationFactor;
      if (speed > 250) speed = 250; // Begrenzen Sie die Geschwindigkeit auf 250
      socket.emit("gas button has been pressed", speed);
      accelerationFactor *= 0.95;
      if (accelerationFactor < 1) accelerationFactor = 1;
    }
  }

  function decreaseSpeed() {
    if (speed > 0) {
      // Überprüfen Sie, ob die Geschwindigkeit größer als 0 ist
      speed -= accelerationFactor;
      if (speed < 0) speed = 0;
      socket.emit("brake button pressed", speed);
      accelerationFactor *= 0.95;
      if (accelerationFactor < 1) accelerationFactor = 1;
    }
  }

  function updateBoxSize(size) {
    // Nur aktualisieren, wenn die Geschwindigkeit kleiner oder gleich 250 ist
    if (speed <= 250) {
      drivingBox.style.width = size * 3 + "px";
      drivingBox.style.height = size * 3 + "px";
    }
  }
  function updateBoxPostion(position) {
    drivingBox.style.left = position + "px";

  }
  gas.addEventListener("mousedown", function () {
    intervalId = setInterval(increaseSpeed, 1); // Beschleunige alle 50 Millisekunden
  });

  gas.addEventListener("mouseup", function () {
    clearInterval(intervalId); // Beende das Intervall, wenn der Knopf losgelassen wird
    accelerationFactor = 50; // Setze den Beschleunigungsfaktor zurück
  });

  brake.addEventListener("mousedown", function () {
    intervalId = setInterval(decreaseSpeed, 1); // Verlangsame alle 50 Millisekunden
  });

  brake.addEventListener("mouseup", function () {
    clearInterval(intervalId); // Beende das Intervall, wenn der Knopf losgelassen wird
    accelerationFactor = 50; // Setze den Beschleunigungsfaktor zurück
  });

  socket.on("new number", function (currentSpeed) {
    speed = Math.min(Math.max(currentSpeed, 0), 250);
    sum.textContent = Math.floor(speed) + " Km/h";
    var boxSize = speed;
    updateBoxSize(boxSize);
  });

  socket.on("update boxPosition", (position) => {
    let screenWidth = window.innerWidth;
    var newBoxPosition = screenWidth * 0.5 - speed * 1.6 + position * 145;
    // newBoxPosition = Math.max(0, Math.min(screenWidth - drivingBox.offsetWidth, newBoxPosition));
    updateBoxPostion(newBoxPosition);
  });





</script>